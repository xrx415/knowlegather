name: Deploy to Google Cloud Run

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: knowlegather
  REGION: europe-west1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io
        gcloud auth list

    - name: Build Docker image
      run: |
        docker build -f Dockerfile.prod \
          --build-arg VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }} \
          --build-arg VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }} \
          --build-arg VITE_OPENROUTER_API_KEY=${{ secrets.VITE_OPENROUTER_API_KEY }} \
          -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          -t gcr.io/$PROJECT_ID/$SERVICE_NAME:latest \
          .

    - name: Push image to Google Container Registry
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 80 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 10 \
          --set-env-vars NODE_ENV=production

    - name: Get service URL
      id: deploy
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT
        echo "ðŸš€ Service deployed at: $SERVICE_URL"

    - name: Test deployment
      run: |
        sleep 30
        curl -f ${{ steps.deploy.outputs.service_url }} || exit 1
        echo "âœ… Deployment test successful!"
